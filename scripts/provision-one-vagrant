#!/usr/bin/env python

import sys
import time
import uuid

import dashi.bootstrap as bootstrap

from epu.dashiproc.provisioner import ProvisionerClient
from epu.epumanagement.forengine import LaunchItem

def printcolor(string):
    COL = '\033[95m'
    ENDCOL = '\033[0m'
    print COL + string + ENDCOL

usage = """usage: %s --dt <deployabletype> [--box <vagrant_box>]""" % sys.argv[0]

CFG = bootstrap.configure([])
dt = CFG.get('dt')
box = CFG.get('box')

if not dt or dt is True:
    print >>sys.stderr, usage
    sys.exit(1)

if not box:
    box = dt
    print >>sys.stderr, "vagrant box not supplied, using '%s'" % box

mytopic = "provisioner_client_%s" % uuid.uuid4()
dashi = bootstrap.dashi_connect(mytopic, amqp_uri="amqp://guest:guest@localhost/")

client = ProvisionerClient(dashi)
subscribers = (mytopic,)

launch_id = str(uuid.uuid4())
launch_description = {}
instanceid = str(uuid.uuid4())
launch_description['work_consumer'] = LaunchItem(1, "m1.large", "ec2-west", None)
launch_description['work_consumer'].instance_ids.append(instanceid)
launch_description['work_consumer'].vagrant_box = box
printcolor("Provisioning %s..." % dt)

client.provision(launch_id, dt, launch_description, subscribers)
while True:
    printcolor("Press 't' to terminate")
    got_input = raw_input()
    if got_input[0] == 't':
        break

client.query()
printcolor("Terminating")
client.terminate_nodes([instanceid])
